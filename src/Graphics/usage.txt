Memory savings when SVG not used (majority of cases)
Without SVGProcessor: ~300-400KB saved per TCPDF instance
Load time: ~3-5ms faster initialization  
CPU: No XML parser setup or SVG state initialization
Parse time: Avoid parsing 8+ complex functions

Implementation in Main TCPDF Class:

class TCPDF 
{
    private ?SVGProcessor $svgProcessor = null;
    
    private function getSVGProcessor(): SVGProcessor 
    {
        return $this->svgProcessor ??= new SVGProcessor($this);
    }
    
    // Public method that triggers lazy loading
    public function ImageSVG($file, $x='', $y='', $w=0, $h=0, $link='', $align='', $palign='', $border=0, $fitonpage=false) 
    {
        $svg_content = file_get_contents($file);
        return $this->getSVGProcessor()->processSVG($svg_content, $x, $y, $w, $h);
    }
    
    // Update existing method calls (delegate to processor)
    protected function convertSVGtMatrix($tm) 
    {
        return $this->getSVGProcessor()->convertSVGTransformMatrix($tm);
    }
}